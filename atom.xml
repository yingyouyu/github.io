<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yingyouyu.github.io</id>
    <title>Sasuke的小窝</title>
    <updated>2020-06-04T11:28:42.056Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yingyouyu.github.io"/>
    <link rel="self" href="https://yingyouyu.github.io/atom.xml"/>
    <subtitle>たくさんの絆があって、自分だけを迷わせます。強い思いと大切な思いは、自分を弱くさせるだけです。</subtitle>
    <logo>https://yingyouyu.github.io/images/avatar.png</logo>
    <icon>https://yingyouyu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Sasuke的小窝</rights>
    <entry>
        <title type="html"><![CDATA[同学搞笑语录大赏]]></title>
        <id>https://yingyouyu.github.io/post/N-ubyRAXs/</id>
        <link href="https://yingyouyu.github.io/post/N-ubyRAXs/">
        </link>
        <updated>2020-05-23T09:29:20.000Z</updated>
        <content type="html"><![CDATA[<p>#1<br>
数学老师：“今天要奥数竞赛，大家……”<br>
王某阳：“奥利给！干了兄弟们！”<br>
我：“……”<br>
数学老师：”😤“<br>
#2<br>
语文老师：“艾萨克·阿西莫夫写过《机器人系列》。”<br>
我（超级小声的）：“那么高达系列谁写的”（doge）<br>
蒋某睿（无敌大声）：“富野由悠季，今川泰宏，池田成，高松信司，福田己津央，阿部雄一，水岛精二，森邦宏，铃木健一，山口晋，长崎健司，まんきゅう，绵田慎也，长井龙雪，古桥一浩，安彦良和……”<br>
语文老师：“蒋某睿你给我出去！”<br>
#3<br>
语文老师：“快放学了，我布置一下作业。”<br>
全班同学：“老师，什么作业啊?“<br>
语文老师：“默写十首古诗，必须有家长签名和订正！”<br>
林某：“去TM的作业，我不想做！”<br>
语文老师：“林某你TM给我出去！我TM不想再见到你了！”<br>
#4<br>
庞某晨：“祖安人民欢乐多啊（滑稽）”<br>
我：“我看你是不想活了是不是？我已经把你妈找来了，还用火钳给她腚眼子捅了个洞。你TM赶紧给我钻进去！我不想再看见你一次！”（祖安猎妈中）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[宁波市四眼碶小学2020年奥数比赛游记]]></title>
        <id>https://yingyouyu.github.io/post/Eo3f7_zFm/</id>
        <link href="https://yingyouyu.github.io/post/Eo3f7_zFm/">
        </link>
        <updated>2020-05-15T10:45:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="初赛前n天">初赛前N天</h1>
<p>被方老师莫名点到，我心里就是<br>
<img src="http://5b0988e595225.cdn.sohucs.com/images/20200418/0d242f29652e43dd8aa5b6f2312b4e12.png" alt="" loading="lazy"><br>
总之心里全是问号就对了<br>
还好我心态没炸<br>
不然……后果不堪设想啊</p>
<h1 id="初赛前1天">初赛前1天</h1>
<p>13日，晴，我逃学打疫苗<img src="https://gsp0.baidu.com/5aAHeD3nKhI2p27j8IqW0jdnxx1xbK/tb/editor/images/client/image_emoticon25.png" alt="" loading="lazy"><br>
忘记和家长说了<br>
我：chhh（防屏蔽）<br>
我真没说明天初赛的事情</p>
<h1 id="初赛前0天初赛当天">初赛前0天（初赛当天）</h1>
<p><img src="http://tiebapic.baidu.com/forum/w%3D580/sign=1437b12b892f07085f052a08d925b865/e77080d4b31c8701326a1182307f9e2f0608fffe.jpg" alt="" loading="lazy"><br>
在考试时当场裂开<br>
我炸了<br>
boom</p>
<h1 id="初赛后一天">初赛后一天</h1>
<p>今天和同学对了答案，发现至少对了3题<br>
距离及格线还有好远啊<br>
这水平<br>
<img src="https://imgsa.baidu.com/forum/w%3D580/sign=1d5daa8b821001e94e3c1407880f7b06/b99530390cd79123294c7716a2345982b2b7803f.jpg" alt="" loading="lazy"><br>
反正是不可能进复赛了<br>
比CSP-J 2019还惨</p>
<h1 id="复赛前一天">复赛前一天</h1>
<p>wow，我进复赛了</p>
<h1 id="复赛当天">复赛当天</h1>
<p>绝望</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么C++永远比不过Python]]></title>
        <id>https://yingyouyu.github.io/post/wei-shi-me-cyong-yuan-gan-bu-guo-python/</id>
        <link href="https://yingyouyu.github.io/post/wei-shi-me-cyong-yuan-gan-bu-guo-python/">
        </link>
        <updated>2020-05-04T12:12:01.000Z</updated>
        <content type="html"><![CDATA[<p>本文从客观角度出发，用较为【数据删除】的说法来说明。</p>
<h1 id="1代码结构">1.代码结构</h1>
<h2 id="11-代码非主体部分">1|1 代码非主体部分</h2>
<p>以高精加为例<br>
C++：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cstring&gt;
using namespace std;
char a1[100],b1[100];
int a[100],b[100],c[100],lena,lenb,lenc,i,x;
int main(){
    memset(a,0,sizeof(a));
  	memset(b,0,sizeof(b));
  	memset(c,0,sizeof(c));
  	gets(a1);
 	gets(b1);                                                     	//输入加数与被加数
  	lena=strlen(a1);
  	lenb=strlen(b1);
  	for (i=0;i&lt;=lena-1;i++) a[lena-i]=a1[i]-48;    	//加数放入a数组
　 for (i=0;i&lt;=lenb-1;i++) b[lenb-i]=b1[i]-48;               //加数放入b数组
  	lenc =1;
  	x=0;
    while (lenc &lt;=lena||lenc &lt;=lenb){
        c[lenc]=a[lenc]+b[lenc]+x;     //两数相加
	　 x=c[lenc]/10;
	　c[lenc]%=10;
		lenc++;
    }
    c[lenc]=x; 
	if (c[lenc]==0)
		lenc--;                                    //处理最高进位
	for (i=lenc;i&gt;=1;i--) 
	cout&lt;&lt;c[i];                                     //输出结果
	cout&lt;&lt;endl;
	return 0;
}
</code></pre>
<p>Python：</p>
<pre><code class="language-python">from functools import reduce#导入reduce用于将整数列表中的内容转换为字符串
def add(a, b):
    if len(a) &gt; len(b):#将输入的数字左端补齐为同样的长度
        b = b.zfill(len(a) - len(b) + 1)
    else:
        a = a.zfill(len(b) - len(a) + 1)
    #(&quot;0&quot; + str(a))前面加&quot;0&quot;的原因是防止最高位进位是超过列表的容量限制
    #比如说9+9会向前面进一位,如果没有添加额外的0的话进位1就没地方存储
    a = list(map(lambda x : int(x), (&quot;0&quot; + str(a)).strip()))
    b = list(map(lambda x : int(x), (&quot;0&quot; + str(b)).strip()))

    for i in range(len(a) - 1, 0, -1):
        temp = a[i] + b[i];
        a[i - 1] += temp // 10
        a[i] = temp % 10
    return int(reduce(lambda x, y : str(x) + str(y), a))#转换为字符串

a, b = input(&quot;input a: &quot;), input(&quot;input b: &quot;)
print(add(a, b))
</code></pre>
<p>搞错了，Python是下面一个：</p>
<pre><code class="language-python">print(int(input())+int(input()))
</code></pre>
<p>我：服了服了<br>
没想到Python如此的简单（滑稽）<br>
首先先看一下C++的非代码主体部分（头文件+变量定义）：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cstring&gt;
using namespace std;
char a1[100],b1[100];
int a[100],b[100],c[100],lena,lenb,lenc,i,x;
</code></pre>
<p>but！<br>
Python并没有这些东西！</p>
<h2 id="12-代码主体结构">1|2 代码主体结构</h2>
<p>此处的主体结构指C++的<code>main()</code>函数和别的函数和Python的非定义变量语句。<br>
C++：</p>
<pre><code class="language-cpp">int main(){
    memset(a,0,sizeof(a));
  	memset(b,0,sizeof(b));
  	memset(c,0,sizeof(c));
  	gets(a1);
 	gets(b1);                                                     	//输入加数与被加数
  	lena=strlen(a1);
  	lenb=strlen(b1);
  	for (i=0;i&lt;=lena-1;i++) a[lena-i]=a1[i]-48;    	//加数放入a数组
　 for (i=0;i&lt;=lenb-1;i++) b[lenb-i]=b1[i]-48;               //加数放入b数组
  	lenc =1;
  	x=0;
    while (lenc &lt;=lena||lenc &lt;=lenb){
        c[lenc]=a[lenc]+b[lenc]+x;     //两数相加
	　 x=c[lenc]/10;
	　c[lenc]%=10;
		lenc++;
    }
    c[lenc]=x; 
	if (c[lenc]==0)
		lenc--;                                    //处理最高进位
	for (i=lenc;i&gt;=1;i--) 
	cout&lt;&lt;c[i];                                     //输出结果
	cout&lt;&lt;endl;
	return 0;
}
</code></pre>
<p>但是！<br>
Python就那么一句话！</p>
<pre><code class="language-python">print(int(input())+int(input()))
</code></pre>
<p>大惊。<br>
#2.输出语句的差异<br>
首先看一下<a href="https://www.luogu.com.cn/problem/P1000">某谷经典题目</a><br>
这题当年坑死我也（输出这么大一张字符画，复制都累死了）<br>
C++正解：</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
int main()
{
	cout&lt;&lt;&quot;                ********&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;               ************&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;               ####....#.&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;             #..###.....##....&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;             ###.......######              ###            ###&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;                ...........               #...#          #...#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;               ##*#######                 #.#.#          #.#.#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;            ####*******######             #.#.#          #.#.#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;           ...#***.****.*###....          #...#          #...#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;           ....**********##.....           ###            ###&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;           ....****    *****....&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;             ####        ####&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;          ######        ######&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;##############################################################&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;#...#......#.##...#......#.##...#......#.##------------------#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;###########################################------------------#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;#..#....#....##..#....#....##..#....#....#####################&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;##########################################    #----------#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;#.....#......##.....#......##.....#......#    #----------#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;##########################################    #----------#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#&quot;&lt;&lt;endl;
	cout&lt;&lt;&quot;##########################################    ############&quot;&lt;&lt;endl;
	return 0;
}
</code></pre>
<p>但是，但是……<br>
Python居然可以写成这样：</p>
<pre><code class="language-python">print('''                ********
               ************
               ####....#.
             #..###.....##....
             ###.......######              ###            ###
                ...........               #...#          #...#
               ##*#######                 #.#.#          #.#.#
            ####*******######             #.#.#          #.#.#
           ...#***.****.*###....          #...#          #...#
           ....**********##.....           ###            ###
           ....****    *****....
             ####        ####
           ######        ######
##############################################################
#...#......#.##...#......#.##...#......#.##------------------#
###########################################------------------#
#..#....#....##..#....#....##..#....#....#####################
##########################################    #----------#
#.....#......##.....#......##.....#......#    #----------#
##########################################    #----------#
#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#
##########################################    ############''')
</code></pre>
<p>多行字符串就是好啊<br>
（但是山外有山，PHP更方便）<br>
but<br>
C也可以写多行字符串……</p>
<h1 id="3是否需要编译">3.是否需要编译</h1>
<p>C++是典型的要编译的语言，但是Python并不需要编译，直接解释运行……<br>
Python：C++他就是个屑啦<br>
C++：Python你欺人太甚</p>
<h1 id="总结">总结</h1>
<p>所以Python才会强到全员都学<br>
所以Python才会被CCF给ban掉<br>
所以……</p>
<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
int main(){
    cout&lt;&lt;&quot;C++永垂不朽！&quot;&lt;&lt;endl;
    return 0;
}
</code></pre>
<p>（手动滑稽）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[萌新必学！这15组Win10快捷键不懂就亏大了]]></title>
        <id>https://yingyouyu.github.io/post/meng-xin-bi-xue-zhe-15-zu-win10-kuai-jie-jian-bu-dong-jiu-yu-da-liao/</id>
        <link href="https://yingyouyu.github.io/post/meng-xin-bi-xue-zhe-15-zu-win10-kuai-jie-jian-bu-dong-jiu-yu-da-liao/">
        </link>
        <updated>2020-04-20T11:31:23.000Z</updated>
        <content type="html"><![CDATA[<p>知道怎样区分萌新和巨佬么？那就要看他会多少Win10快捷键了。萌新写代码全靠手打，巨佬写代码居然摸鱼！巨佬靠的就是自身“过硬”的快捷键技术才练成的边写代码边摸鱼的神技。</p>
<h1 id="一键显桌面">一键显桌面</h1>
<h2 id="快捷键wind">快捷键：Win+D</h2>
<p>不想让老师看到你在做什么，直接按下“Win+D”就可以了。<br>
Win+D可以快速显示桌面，顺带将所有的窗口最小化，这样神不知鬼不觉地……就让别人看不到你刚刚做什么了。不过这个技巧有两个要注意的地方，一是对游戏无效，二是……太明目张胆了，此地无银三百两懂不？</p>
<h1 id="一键打开资源管理器">一键打开资源管理器</h1>
<h2 id="快捷键wine">快捷键：Win+E</h2>
<p>正在做PPT，临时需要查找文件，那么按下“Win+E”就OK了。<br>
Win+E可以一键打开资源管理器，省却了回到桌面再双击“此电脑”的麻烦，写教案提效妥妥的。而且你可以通过选项，控制打开的是“此电脑”还是“快速访问”，萌新一定要学会它哟！</p>
<h1 id="一键锁屏">一键锁屏</h1>
<h2 id="快捷键winl">快捷键：Win+L</h2>
<p>起身去洗手间电脑一定要关机？NO！在此之前，你一定要按一下“Win+L”。<br>
Win+L是Win10里的锁屏键，也就是说无论是你还是其他意图不明的人，只要再想使用你的电脑，就必须输入密码了。好处不多说了，防止隐私泄露，快速返回工作状态，这个可要比关机实在多了。</p>
<h1 id="一键切桌面">一键切“桌面”</h1>
<h2 id="快捷键winctrl">快捷键：Win+Ctrl+→/←</h2>
<p>Win10的虚拟桌面大家都用过，通过为不同任务设置不同的“桌面”，能够让工作更有条理，轻轻松松过一把“多显示器”的瘾。问题是……如何在不同的“桌面”间切换呢？这就要用到快捷键Win+Ctrl+→/←了。<br>
简单来说，切换到左桌面，点击Win+Ctrl+←，切换到右桌面，点击Win+Ctrl+→。对付老师，这一招可要比刚才的Win+D实用多了！（悄悄说一句，游戏也可以用哦~）</p>
<h1 id="一键搜索">一键搜索</h1>
<h2 id="快捷键wins">快捷键：Win+S</h2>
<p>Win10的搜索大家都用过，查个文件、找个软件还是相当方便的。不过每次都要用鼠标，是不是有点……太那个了！那么对应的快捷键，就是Win+S。</p>
<h1 id="多重剪贴板">多重剪贴板</h1>
<h2 id="快捷键winv">快捷键：Win+V</h2>
<p>Ctrl+V大家都用过，Win+V知道的就比较少了。简单来说，Ctrl+V每次只能粘贴一个，而Win+V则可以调出复制历史，通过点击多次粘贴。于是青史留名、升级加薪就靠它了！除了文字外，图片也是Win+V的拿手好戏！甚至你可以将其他Win10设备里的内容直接粘贴过来，真正做到“在家复制，教室里粘贴”。</p>
<h1 id="一键截图">一键截图</h1>
<h2 id="快捷键winshifts">快捷键：Win+Shift+S</h2>
<p>还在抱怨Win10里没有截图软件？试一试Win+Shift+S吧，按下后屏幕会自动暗化，顶端弹出一个快捷截图栏。无论是截窗口、截屏幕、截区域，还是随性地画个圈圈去截图，统统支持。截好的内容可以快速编辑与分享，没试过的赶快去试吧！</p>
<h1 id="一键语音输入">一键语音输入</h1>
<h2 id="快捷键winh">快捷键：Win+H</h2>
<p>打字打累了，可以试一试Win+H。Win+H是Win10里的语音识别键，按下后会呼出识别框，之后就可以对着麦克风说话了。Win+H的识别率很高，甚至可以语音添加标点，妥妥的办公神器呀！</p>
<h1 id="白板">白板</h1>
<h2 id="快捷键winw">快捷键：Win+W</h2>
<p>先提一句，不是搓麻将那个白板！<br>
WhiteBoard是Win10里的电子白板，打开后能像在普通白板上一样，直接在屏幕上书写与圈释。它有着媲美OneNote的手感，又不像OneNote那样死板地固守某一操作。那么它是如何调出的？这就是Win+W了。</p>
<h1 id="一键显日历">一键显日历</h1>
<h2 id="快捷键winaltd">快捷键：Win+Alt+D</h2>
<p>这个快捷键就像Win+D一样没用，唯一的作用就是在你工作时，可以一键将日历面板调出来。看看日程呀，查查假期呀……总之快捷键就是Win+Alt+D，有需要的自取吧。</p>
<h1 id="一键录屏">一键录屏</h1>
<h2 id="快捷键wing">快捷键：Win+G</h2>
<p>想把你的屏幕操作录下来？不妨试一试Win+G，这是Win10里的录屏快捷键，点击中间那个圆点按钮就可以了。和第三方软件相比，Win10的录屏功能不但清晰，而且录出的文件体积也不大，没用过的一定要试一试。</p>
<h1 id="一键投影">一键投影</h1>
<h2 id="快捷键winp">快捷键：Win+P</h2>
<p>连接投影仪，把PPT上的内容投射到大屏上，就一定要用到Win+P。Win10总共提供了四种投影模式，分别是只在电脑上显示、投影仪和电脑显示相同内容、把投影仪当作扩展屏幕使用（投影PPT首选）、只在投影仪上显示。这是编程老师的必会技能，学生不会or学生全会就全看它了。</p>
<h1 id="一键连电视">一键连电视</h1>
<h2 id="快捷键wink">快捷键：Win+K</h2>
<p>能连电脑的可不仅仅是投影仪，如果在学习编程的教室里面，只有一台智能电视，不妨来试试Win+K。<br>
Win+K是Win10里的连接器，可以连接蓝牙音响、蓝牙鼠标、无线显示器等等。如果你的电脑和电视均支持Miracast协议，那么就可以利用这个方法，直接将电脑里的内容投影到电视上了。</p>
<h1 id="快速启动软件">快速启动软件</h1>
<h2 id="快捷键win123">快捷键：Win+1/2/3……</h2>
<p>看看你的任务栏上是不是躺着一排软件？如何快速启动它们呢？最简单一个办法，就是按下Windows键，然后按顺序点击数字，其中“Win+1”代表启动任务栏左侧第一款软件，“Win+2”代表启动任务栏左侧第二款软件，以此类推。</p>
<h1 id="一键放大">一键放大</h1>
<h2 id="快捷键win-">快捷键：Win+“+/-”</h2>
<p>加班久了，眼花了吧？试一试这组Win+“+”吧。这是Win10里的放大镜快捷键，可以一键将整个屏幕放大。Win+“+”能够自动跟随鼠标，因此不用担心会被遮挡看不到信息。哦对了，怎么返回呢？很简单，再按一下Win+“-”就可以了。</p>
<h1 id="写在最后">写在最后</h1>
<p>Windows的快捷键是相当多的，Win10又在其基础上进行了部分扩充。总之快捷键是教室内，区分萌新和巨佬的重要技能，熟练使用快捷键能够大大提高日常效率。那你们学会了吗？（手动滑稽）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[那些烦人的传奇广告，为何屡禁不止？]]></title>
        <id>https://yingyouyu.github.io/post/na-xie-fan-ren-de-chuan-qi-guang-gao-wei-he-lu-jin-bu-zhi/</id>
        <link href="https://yingyouyu.github.io/post/na-xie-fan-ren-de-chuan-qi-guang-gao-wei-he-lu-jin-bu-zhi/">
        </link>
        <updated>2020-04-17T09:55:58.000Z</updated>
        <content type="html"><![CDATA[<p>该文章为一篇杂谈，关于那些烦人的广告而生。</p>
<h1 id="从头来探究传奇">从头来探究传奇</h1>
<p>传奇这种游戏你懂得，说什么“新手村送神装”，“一刀999，打不赢boss算我输”，甚至还有明星代言（成龙啊，xxx明星啊等等等等）<br>
但是，传奇这种游戏为什么遍地开花，而人家网易精心做的《重装上阵》为什么只有一个服务器？（世界未解之谜）</p>
<h2 id="传奇这类游戏为什么会这么多">传奇这类游戏为什么会这么多</h2>
<p>无良商家多，为了赚钱而编写传奇类网游、手游、端游……<br>
而且这游戏，骗氪！腾讯不敢做的事情，他敢做！<br>
（腾讯都没这么骗氪啊喂）<br>
传奇，沦为了不氪金不能变强的游戏。不氪金，你哪来的+99神装？</p>
<h2 id="玩传奇的都是什么人">玩传奇的都是什么人</h2>
<p>搞不好都是那些无良商家的托，人家在同样时间内，立刻十转999级，而你呢，新手村还没打完……</p>
<h1 id="如果你的手机电脑上有传奇">如果你的手机/电脑上有传奇</h1>
<p>立刻卸载，立刻！立刻！</p>
<h2 id="关于为什么要立刻卸载传奇我有话要说">关于“为什么要立刻卸载传奇”，我有话要说</h2>
<p>玩传奇，还不如有时间写写代码，愉悦愉悦身心，去做点你想做的事。<br>
接下来才是为什么卸载传奇的真正原因。</p>
<h3 id="1占内存">1.占内存</h3>
<p>我说的是大实话，这点手机/电脑内存还不如存点资料</p>
<h3 id="2玩法单一">2.玩法单一</h3>
<p>传奇只有升级变强这条路，但你看看隔壁网易的《重装上阵》，可以开自己的机甲和别人战斗，造赛车和别人在赛道上竞速，造高达以完成儿时梦想……传奇他做得到吗？！</p>
<h2 id="so">so</h2>
<p>你肯定了解为什么要卸载传奇了。</p>
<h1 id="如何抵制传奇">如何抵制传奇</h1>
<p>看到广告立刻删除广告，如果游戏内要你看广告的话，看完，死也别下载。<br>
如果是百度网上看到，直接屏蔽，或者用高超的F12技能让他不出现在你的眼前。</p>
<h2 id="但是那些传奇广告为啥屡禁不止">但是那些传奇广告为啥屡禁不止</h2>
<p>太流氓，一个被禁再写一个再发，贼流氓。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[当你的程序不通过时]]></title>
        <id>https://yingyouyu.github.io/post/dang-ni-de-cheng-xu-bu-tong-guo-shi/</id>
        <link href="https://yingyouyu.github.io/post/dang-ni-de-cheng-xu-bu-tong-guo-shi/">
        </link>
        <updated>2020-04-16T09:44:14.000Z</updated>
        <content type="html"><![CDATA[<p><strong>本人被洛谷评测姬教育了，想AC却WA</strong></p>
<h1 id="题外话教你一招wa">题外话——教你一招WA</h1>
<p>所有题都输出<code>hello world</code></p>
<h1 id="1为什么别人ac你偏偏wa">1.为什么别人AC你偏偏WA</h1>
<p>这就是一个大坑，写代码写的好的人偏偏能避坑……（无语）<br>
但是你试错也不会去试<code>100</code>次啊！<br>
这就是你一直WA的理由？<br>
（我看不下去了）</p>
<h1 id="2如何解决一直wa的命运">2.如何解决一直WA的命运</h1>
<p>重构代码，如果还不行再重构一遍，重构解决OI界100%的问题。<br>
但是你重构<code>100</code>次还WA的话……<br>
你还有什么理由去打OI！</p>
<h1 id="3wa的根本原因">3.WA的根本原因</h1>
<p>答案错误（最根本原因）<br>
其实为什么WA，你翻译一下，<code>Wrong Answer</code>，不就是答案错误吗？<br>
（其实这个谁都知道）</p>
<h1 id="4试错10000遍还是错">4.试错10000遍还是错……</h1>
<p><img src="https://yingyouyu.github.io/post-images/1587033297454.png" alt="" loading="lazy"><br>
基本告别OI了，一万遍……评测姬都卡死了（指某谷）<br>
再说你这试错你试了好几天了吧，<code>10000</code>次……<br>
小OJ的评测姬估计都炸了……</p>
<h1 id="5最好的避免wa的办法">5.最好的避免WA的办法</h1>
<p>不去刷OJ，这样你不会WA，当然也不会有AC。</p>
]]></content>
    </entry>
</feed>